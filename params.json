{
  "name": "Bc-19-maintenance tracker",
  "tagline": "A project that tracks maintenance or repair requests",
  "body": "## **Introduction**\r\n\r\n`Maintenance Tracker` is a `AngularJS` and `NodeJS` App. It's linked to a `Firebase` database.\r\n* It has the following features;\r\n* Login with username ans password\r\n* Allows adding requests(maintenance or repair)\r\n* Allows users to edit requests and see the status;\r\n* Allows users to see notifications\r\n* Allows repairers to update request they were assigned a s done\r\n* Allows users to see profile\r\n* Allows adminitrator to add repairers\r\n* Allows administrator to manage requests: accept or reject it\r\n\r\nClick here ~~www.google.com~~to access the app on Github Pages\r\n\r\n## Dependencies\r\n\r\n### Back End Dependencies\r\n\r\nThis app's functionality depends on multiple `NodeJS` packages  and `Firebase` database including;\r\n* NodeJS/Javascript- This framework helps is essential in the creation of object relational models and it also handles routing on the back end.\r\n* Firebase: The Firebase Realtime Database is a cloud-hosted database. Data is stored as JSON and synchronized in realtime to every connected client.\r\n\r\n### Front End Dependencies\r\n\r\n* Angular Material  - The app's login and dashboard templates have been styled using this CSS framework\r\n* Angular JS - This framework facilitates the dynamic aspects of this app. It enables the application of the Single Page Application philosophy and also has mechanisms to make calls to the backend to update the view with recent data.\r\n* Angular Resource - This is an Angular component that is particularly useful when making calls to a RESTful route.\r\n* Angular - An Angular component that provides read/write access to a browser's cookies.\r\n* ng-file-upload - This library is an angular component that enables file (images in this case) upload and also features a service that enables posting of these uploads to the back end.\r\n\r\n##Installation and setup\r\n\r\n1. Navigate to a directory of choice on terminal.\r\n2. Clone this repository on that directory.\r\n\r\n    * Using SSH;\r\n    \r\n            git clone git@github.com:centia28/bc-19-maintenance_tracker\r\n    * Using HTTP;\r\n\r\n            https://github.com/centia28/bc-19-maintenance_tracker.git\r\n3. Navigate to the repo's folder on your computer\r\n\r\n        cd bc-19-maintenance_tracker/\r\n4. Run the app. It installs the app's backend dependencies.\r\n        \r\n        npm install\r\n        Starting development server at http://127.0.0.1:8000/\r\n         Quit the server with CONTROL-C.\r\n\r\n5. You can access to the app in the browser at this: **`http://127.0.0.1:8000/`**",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}